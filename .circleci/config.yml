version: 2.1

orbs:
  ft-golang-ci: financial-times/golang-ci@1

jobs:
  build:
    working_directory: /kafka-lib
    docker:
      - image: golang:1
        environment:
          CIRCLE_TEST_REPORTS: /tmp/test-results
          CIRCLE_COVERAGE_REPORT: /tmp/coverage-results
          KAFKA_PEERS: localhost:9092
          ZOOKEEPER_PEERS: localhost:2181
    steps:
      - checkout
      - run:
          name: Setup Kafka
          command: |
            apt-get update && apt-get install --yes software-properties-common
            wget -qO - https://adoptopenjdk.jfrog.io/adoptopenjdk/api/gpg/key/public | apt-key add -
            apt-add-repository --yes https://adoptopenjdk.jfrog.io/adoptopenjdk/deb/
            apt-get update && apt-get install --yes adoptopenjdk-8-hotspot
            wget https://archive.apache.org/dist/kafka/0.8.2.2/kafka_2.10-0.8.2.2.tgz -O kafka.tgz
            mkdir -p /kafka && tar xzf kafka.tgz -C /kafka --strip-components 1
            nohup bash -c "cd /kafka && bin/zookeeper-server-start.sh config/zookeeper.properties &"
            nohup bash -c "cd /kafka && bin/kafka-server-start.sh config/server.properties &"
            sleep 5
            /kafka/bin/kafka-topics.sh --create --partitions 1 --replication-factor 1 --topic test.1 --zookeeper localhost:2181
            /kafka/bin/kafka-topics.sh --create --partitions 4 --replication-factor 1 --topic test.4 --zookeeper localhost:2181
            /kafka/bin/kafka-topics.sh --create --partitions 64 --replication-factor 1 --topic test.64 --zookeeper localhost:2181
      - ft-golang-ci/build
      - ft-golang-ci/lint
      - ft-golang-ci/test

workflows:
  tests:
    jobs:
      - build
  snyk-scanning:
    jobs:
      - ft-golang-ci/scan:
          name: scan-dependencies
          context: cm-team-snyk
